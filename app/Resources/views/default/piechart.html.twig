{% extends 'base.html.twig' %}

{%  block body%}
    <body>
    <br>
    <div class="row">
        <div class="col-md-5 col-lg-5" style="margin-left: 5px;" id="pieChart">
            <p class="col-xs-offset-1 col-md-offset-1"><ins><i>D3js PieChart (i)</i></ins></p>
        </div>
        <div class="col-md-5 col-lg-5" style="margin-left: 5px;" id="pieChart2">
            <p class="col-xs-offset-1 col-md-offset-1"><ins><i>D3js PieChart (ii)</i></ins></p>
        </div>
    </div>
    </body>
{% endblock %}
{% block javascripts %}
<script src="//d3js.org/d3.v2.js"></script>

<script>
    //        var 	formatAsPercentage = d3.format("%100")
    var 	formatAsPercentage = d3.format(".2s")
            ;
    function dsPieChart(){
        var dataset = [
                    {category: "Tipo A", measure: 45},
                    {category: "Tipo B", measure: 75}
                ]
                ;
        var 	width = 300,
                height = 300,
                outerRadius = Math.min(width, height) / 2,
                innerRadius = outerRadius * .999,
        // for animation
                innerRadiusFinal = 0,
                color = d3.scale.category20()    //creamos la gama de colores
                ;


        var vis = d3.select("#pieChart")
                        .append("svg:svg")              //creamos el elemento SVG en su div correspondiente
                        .data([dataset])
                        .attr("width", width)
                        .attr("height", height)
                        .append("svg:g")
                        .attr("transform", "translate(" + outerRadius + "," + outerRadius + ")")
                ;

        var arc = d3.svg.arc()              //esta función creará los arcos para dibujar el gráfico
                .outerRadius(outerRadius).innerRadius(innerRadius);

        var arcFinal = d3.svg.arc().innerRadius(innerRadiusFinal).outerRadius(outerRadius);

        var pie = d3.layout.pie()           //usamos un Layout para no tener que calcular nosotros los puntos de inicio y final
                .value(function(d) { return d.measure; });

        var arcs = vis.selectAll("g.slice")
                .data(pie)
                .enter()
                .append("svg:g")
                .attr("class", "slice");

        arcs.append("svg:path")
                .attr("fill", function(d, i) { return color(i); } )
                .attr("d", arc)
                .append("svg:title") //creamos un tooltip visual al pasar el puntero por encima
                .text(function(d) { return d.data.category + ": " + formatAsPercentage(d.data.measure); });

        d3.selectAll("g.slice").selectAll("path").transition()
                .duration(775)
                .delay(10)
                .attr("d", arcFinal )
        ;

        //Añadimos también una etiqueta
        arcs.filter(function(d) { return d.endAngle - d.startAngle > .2; })
                .append("svg:text")
                .attr("dy", ".35em")
                .attr("text-anchor", "middle")
//                    .attr("transform", function(d) { return "translate(" + arcFinal.centroid(d) + ")rotate(" + angle(d) + ")"; })
                .attr("transform", function(d) { return "translate(" + arcFinal.centroid(d) + ")"; })
                .text(function(d) { return d.data.category; })
        ;

//        // convierte de radianes a grados.
//        function angle(d) {
//            var a = (d.startAngle + d.endAngle) * 90 / Math.PI - 90;
//            return a > 90 ? a - 180 : a;
//        }


        // Añadimos el titulo
        vis.append("svg:text")
                .attr("dy", "13em")
                .attr("text-anchor", "middle")
                .attr("class","title")
        ;
    }
    function dsPieChart2(){
        var dataset2 = [
                    {category: "Tipo A", measure: 45},
                    {category: "Tipo B", measure: 75}
                ]
                ;
        var 	width2 = 300,
                height2 = 300,
                outerRadius2 = Math.min(width2, height2) / 2,
                innerRadius2 = outerRadius2 * .999,
        // for animation
                innerRadiusFinal2 = 20,
                color = d3.scale.category20()    //creamos la gama de colores
                ;

        var vis2 = d3.select("#pieChart2")
                        .append("svg1:svg1")              //creamos el elemento SVG en su div correspondiente
                        .data([dataset2])
                        .attr("width", width2)
                        .attr("height", height2)
                        .append("svg1:g1")
                        .attr("transform", "translate(" + outerRadius2 + "," + outerRadius2 + ")")
                ;

        var arc2 = d3.svg.arc()              //esta función creará los arcos para dibujar el gráfico
                .outerRadius(outerRadius2).innerRadius(innerRadius2);

        var arcFinal2 = d3.svg1.arc().innerRadius(innerRadiusFinal2).outerRadius(outerRadius2);

        var pie2 = d3.layout.pie()           //usamos un Layout para no tener que calcular nosotros los puntos de inicio y final
                .value(function(d) { return d.measure; });

        var arcs2 = vis2.selectAll("g.slice")
                .data(pie2)
                .enter()
                .append("svg1:g1")
                .attr("class", "slice");

        arcs2.append("svg1:path")
                .attr("fill", function(d, i) { return color(i); } )
                .attr("d", arc2)
                .append("svg1:title") //creamos un tooltip visual al pasar el puntero por encima
                .text(function(d) { return d.data.category + ": " + formatAsPercentage(d.data.measure); });

        d3.selectAll("g1.slice").selectAll("path").transition()
                .duration(775)
                .delay(10)
                .attr("d", arcFinal2 )
        ;

        //Añadimos también una etiqueta
        arcs2.filter(function(d) { return d.endAngle - d.startAngle > .2; })
                .append("svg1:text")
                .attr("dy", ".35em")
                .attr("text-anchor", "middle")
//                    .attr("transform", function(d) { return "translate(" + arcFinal.centroid(d) + ")rotate(" + angle(d) + ")"; })
                .attr("transform", function(d) { return "translate(" + arcFinal2.centroid(d) + ")"; })
                .text(function(d) { return d.data.category; })
        ;

        // convierte de radianes a grados.
        function angle(d) {
            var a = (d.startAngle + d.endAngle) * 90 / Math.PI - 90;
            return a > 90 ? a - 180 : a;
        }


        // Añadimos el titulo
        vis2.append("svg1:text")
                .attr("dy", "13em")
                .attr("text-anchor", "middle")
                .attr("class","title")
        ;
    }
    dsPieChart();
    dsPieChart2();
</script>
{% endblock %}